/*
 * Copyright (C) 2022 tobid.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package org.ine.telluride.jaer.tell2022;

import java.util.logging.Logger;

/**
 *
 * @author tobid
 */
public class GoingFishingFishingRodControlFrame extends javax.swing.JFrame {

    static Logger log = Logger.getLogger("GoingFishing");

    private long lastTimeMs = 0;
    private boolean recording = false;
    RodSequence rodSequence = new RodSequence();

    /**
     * Creates new form GoingFishingFishingRodControlFrame
     */
    public GoingFishingFishingRodControlFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        recordToggleButton = new javax.swing.JToggleButton();
        rodControlPanel = new javax.swing.JPanel();
        helpText = new javax.swing.JTextField();

        setTitle("Going Fishing Rod Control");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        recordToggleButton.setText("Record (r)");
        recordToggleButton.setToolTipText("Toggle recording of fishing rod movement");
        recordToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordToggleButtonActionPerformed(evt);
            }
        });

        rodControlPanel.setBackground(new java.awt.Color(102, 204, 255));
        rodControlPanel.setBorder(new javax.swing.border.MatteBorder(null));
        rodControlPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                rodControlPanelMouseDragged(evt);
            }
        });
        rodControlPanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rodControlPanelKeyTyped(evt);
            }
        });

        helpText.setEditable(false);
        helpText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        helpText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        helpText.setText("Hold button 1 and drag to control rod");
        helpText.setFocusable(false);

        javax.swing.GroupLayout rodControlPanelLayout = new javax.swing.GroupLayout(rodControlPanel);
        rodControlPanel.setLayout(rodControlPanelLayout);
        rodControlPanelLayout.setHorizontalGroup(
            rodControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rodControlPanelLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(helpText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );
        rodControlPanelLayout.setVerticalGroup(
            rodControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rodControlPanelLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(helpText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(132, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rodControlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(recordToggleButton))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(rodControlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(recordToggleButton))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rodControlPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rodControlPanelMouseDragged
        int thetaDeg = (int) (Math.floor(180f * (float) evt.getX() / rodControlPanel.getWidth()));
        int zDeg = (int) (Math.floor(180f * (float) (rodControlPanel.getHeight() - evt.getY()) / rodControlPanel.getHeight()));
        final long currentTimeMillis = System.currentTimeMillis();

        RodPosition rodPosition = new RodPosition(lastTimeMs == 0 ? 0 : currentTimeMillis - lastTimeMs, thetaDeg, zDeg);
        if (recording) {
            rodSequence.add(rodPosition);
        }
        lastTimeMs = currentTimeMillis;
//        log.info(rodPosition.toString());
        firePropertyChange(GoingFishing.EVENT_ROD_POSITION, null, rodPosition);
    }//GEN-LAST:event_rodControlPanelMouseDragged

    private void rodControlPanelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rodControlPanelKeyTyped
        if (evt.getKeyChar() == 'r') {
            recordToggleButton.setEnabled(!recordToggleButton.isEnabled());
            toggleRecording();
        }
    }//GEN-LAST:event_rodControlPanelKeyTyped

    private void recordToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordToggleButtonActionPerformed
        toggleRecording();
    }//GEN-LAST:event_recordToggleButtonActionPerformed

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        if (evt.getKeyChar() == 'r') {
            recordToggleButton.setEnabled(!recordToggleButton.isEnabled());
            toggleRecording();
        }
    }//GEN-LAST:event_formKeyTyped

    private void toggleRecording() {
        recording = !recording;
        if (recording) {
            lastTimeMs = 0;
            rodSequence.clear();
        } else {
            firePropertyChange(GoingFishing.EVENT_ROD_SEQUENCE, null, rodSequence);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GoingFishingFishingRodControlFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GoingFishingFishingRodControlFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GoingFishingFishingRodControlFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GoingFishingFishingRodControlFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GoingFishingFishingRodControlFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField helpText;
    private javax.swing.JToggleButton recordToggleButton;
    private javax.swing.JPanel rodControlPanel;
    // End of variables declaration//GEN-END:variables

}
